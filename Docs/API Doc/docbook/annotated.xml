<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_actor_tiya_animator_adapter">Sarachan.UniTiya.TiyaAnimator.ActorTiyaAnimatorAdapter</link>
<para><link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_tiya_animator">TiyaAnimator</link> 对于 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_controller">IActorController</link> 的适配器 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_ammunition_skill">Sarachan.UniTiya.Skill.AmmunitionSkill</link>
<para>弹药控制 Skill，Perform 是进行 Reload。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_ammunition_skill_behaviour">Sarachan.UniTiya.Skill.AmmunitionSkillBehaviour</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_a_s___param_resetter">Sarachan.UniTiya.Utility.AS_ParamResetter</link>
<para>适用于 Animator State 的参数重置器 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_commands_1_1_basic_command_processor">Sarachan.UniTiya.Commands.BasicCommandProcessor&lt; T &gt;</link>
<para>基础的命令处理器，在每次 Update 顺序执行命令队列里所有的命令。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_consumer_1_1_behaviour_consumer_ref">Sarachan.UniTiya.Consumer.BehaviourConsumerRef</link>
<para><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_consumer_1_1_i_consumer">IConsumer</link> 的 MonoBehaviuor 基引用 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_behaviour_tree_node_base">Sarachan.UniTiya.BehaviourTree.BehaviourTreeNodeBase</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_tiya_inventory_1_1_change_inventory_item_event">Sarachan.UniTiya.ItemSystem.TiyaInventory.ChangeInventoryItemEvent</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_charge_decorator_skill">Sarachan.UniTiya.Skill.ChargeDecoratorSkill</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_charge_skill_behaviour">Sarachan.UniTiya.Skill.ChargeSkillBehaviour</link>
<para><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_charge_decorator_skill">ChargeDecoratorSkill</link> 的 Behaviour 引用。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_cloth_changer_1_1_cloth_change_event">Sarachan.UniTiya.TiyaActor.ClothTool.TiyaClothChanger.ClothChangeEvent</link>
<para>更换 cloth 的 Event </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_cloth_changer_1_1_cloth_cmpt_hide_event">Sarachan.UniTiya.TiyaActor.ClothTool.TiyaClothChanger.ClothCmptHideEvent</link>
<para>第一个参数是暖暖自身；第二个参数是 cloth；第三个参数是 clothCmpt </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_consumer_1_1_cold_down_consumer">Sarachan.UniTiya.Consumer.ColdDownConsumer</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_consumer_1_1_cold_down_consumer_behaviour">Sarachan.UniTiya.Consumer.ColdDownConsumerBehaviour</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_composite_node">Sarachan.UniTiya.BehaviourTree.CompositeNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_tiya_basic_damage_source_1_1_damage_event">Sarachan.UniTiya.Utility.TiyaBasicDamageSource.DamageEvent</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_decorator_node">Sarachan.UniTiya.BehaviourTree.DecoratorNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_delay_node">Sarachan.UniTiya.BehaviourTree.DelayNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_property_attributes_1_1_disable_attribute">Sarachan.UniTiya.TiyaPropertyAttributes.DisableAttribute</link>
<para>将一个 SerializedField （根据条件）设为 Disable </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_interaction_1_1_drop_tiya_item_interactive">Sarachan.UniTiya.Interaction.DropTiyaItemInteractive</link>
<para>将指定物体加入角色背包的 Interactive </para>
<link linkend="_struct_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_cloth_changer_1_1_cloth_change_event_1_1_event_data">Sarachan.UniTiya.TiyaActor.ClothTool.TiyaClothChanger.ClothChangeEvent.EventData</link><link linkend="_struct_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_cloth_changer_1_1_cloth_cmpt_hide_event_1_1_event_data">Sarachan.UniTiya.TiyaActor.ClothTool.TiyaClothChanger.ClothCmptHideEvent.EventData</link><link linkend="_struct_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_float_property">Sarachan.UniTiya.Utility.GamePropertyConfiguration.FloatProperty</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_float_property_dictionary">Sarachan.UniTiya.Utility.GamePropertyConfiguration.FloatPropertyDictionary</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration">Sarachan.UniTiya.Utility.GamePropertyConfiguration</link>
<para>一个可配置的 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_game_properties">IGameProperties</link> 实现 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_property_attributes_1_1_hide_if_attribute">Sarachan.UniTiya.TiyaPropertyAttributes.HideIfAttribute</link>
<para>将一个 SerializedField 根据条件隐藏 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_actions">Sarachan.UniTiya.IActorActions</link><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_camera_view">Sarachan.UniTiya.IActorCameraView</link>
<para>玩家 Actor 的 View，它将 View 控制与 Camera 控制结合在一起 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_controller">Sarachan.UniTiya.IActorController</link>
<para>Actor 模块的接口，定义了 Actor 的属性和无条件行为 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_properties">Sarachan.UniTiya.IActorProperties</link>
<para>Actor 的游戏属性 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_i_actor_tiya_animator_adapter">Sarachan.UniTiya.TiyaAnimator.IActorTiyaAnimatorAdapter</link>
<para><link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_tiya_animator">TiyaAnimator</link> 对于 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_controller">IActorController</link> 的适配器接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_view">Sarachan.UniTiya.IActorView</link>
<para>Actor 的视线控制接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_commands_1_1_i_command">Sarachan.UniTiya.Commands.ICommand&lt; in in T &gt;</link>
<para>命令接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_commands_1_1_i_command_processor">Sarachan.UniTiya.Commands.ICommandProcessor&lt; out out T &gt;</link>
<para>命令处理器接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_consumer_1_1_i_consumer">Sarachan.UniTiya.Consumer.IConsumer</link>
<para>一切 Cost 的接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_damageable">Sarachan.UniTiya.IDamageable</link>
<para>受到伤害接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_damage_source">Sarachan.UniTiya.IDamageSource</link>
<para>伤害源 </para>
<link linkend="_struct_sarachan_1_1_uni_tiya_1_1_utility_1_1_random_obj_initializer_1_1_i_d_weight_pair">Sarachan.UniTiya.Utility.RandomObjInitializer.IDWeightPair</link><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_enable">Sarachan.UniTiya.IEnable</link>
<para>有 Enable 功能的接口。 不建议给 Monobehaviour 之类的本来就有 Enable 功能的类实现该接口， 而是只给自定义类使用。 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_equipment_manager">Sarachan.UniTiya.IEquipmentManager</link>
<para>游戏对象的装备物品的管理器 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_game_dynamic_numerical_property">Sarachan.UniTiya.IGameDynamicNumericalProperty</link>
<para>代表游戏的动态属性值接口，比如角色 HP 之类的。 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_game_fixed_numerical_property">Sarachan.UniTiya.IGameFixedNumericalProperty</link>
<para>代表游戏的固定属性值接口，比如角色的力量值之类的。 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_game_object_pool">Sarachan.UniTiya.IGameObjectPool</link>
<para>对象池接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_game_properties">Sarachan.UniTiya.IGameProperties</link>
<para>自定义属性器，在 <link linkend="_namespace_sarachan_1_1_uni_tiya">UniTiya</link> 中被用来作为定义游戏属性的工具。 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_interactive">Sarachan.UniTiya.IInteractive</link>
<para>可交互接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_interactive_object_handler">Sarachan.UniTiya.IInteractiveObjectHandler</link>
<para>交互主体接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_inventory">Sarachan.UniTiya.IInventory</link>
<para>背包系统接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_item">Sarachan.UniTiya.IItem</link>
<para>物品接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_item_manager">Sarachan.UniTiya.IItemManager</link>
<para>Item 的管理器。 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_melee_weapon_animation_events">Sarachan.UniTiya.Skill.IMeleeWeaponAnimationEvents</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_consumer_1_1_int_consumer">Sarachan.UniTiya.Consumer.IntConsumer</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_consumer_1_1_int_consumer_behaviour">Sarachan.UniTiya.Consumer.IntConsumerBehaviour</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_interaction_1_1_tiya_interactive_1_1_interact_event">Sarachan.UniTiya.Interaction.TiyaInteractive.InteractEvent</link><link linkend="_struct_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_int_property">Sarachan.UniTiya.Utility.GamePropertyConfiguration.IntProperty</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_int_property_dictionary">Sarachan.UniTiya.Utility.GamePropertyConfiguration.IntPropertyDictionary</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_int_property_value_synchronizer">Sarachan.UniTiya.Utility.IntPropertyValueSynchronizer</link>
<para>int 类型的 PropertyValueSynchronizer&lt;T&gt; </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_inverter_node">Sarachan.UniTiya.BehaviourTree.InverterNode</link><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_skill">Sarachan.UniTiya.Skill.ISkill</link>
<para><link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_skill">Skill</link> 接口。Skill 是对行为的一种抽象，它会尝试去执行某种行为（但不一定成功）。 <link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_skill">Skill</link> 支持两种行为： <itemizedlist>
</itemizedlist>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_skill_1a57405a399b765c2c0da5c4e8afd6e566">TryToPerform</link> 中实现，<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_skill_1a967a819403a78dd1dfd07aeb5b3172df">Cancel</link> 对行为无影响。 </para>

<para><itemizedlist>
</itemizedlist>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_skill_1a57405a399b765c2c0da5c4e8afd6e566">TryToPerform</link> 返回 true 时开始，<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_skill_1a967a819403a78dd1dfd07aeb5b3172df">Cancel</link> 时结束。 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_skill_1a967a819403a78dd1dfd07aeb5b3172df">Cancel</link> 只有在行为开始状态才有实际意义，其余状态对行为无影响。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_listeners_1_1_item_equip_weapon_listener">Sarachan.UniTiya.ItemSystem.Listeners.ItemEquipWeaponListener</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_listeners_1_1_item_generate_box_damage_field_listener">Sarachan.UniTiya.ItemSystem.Listeners.ItemGenerateBoxDamageFieldListener</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_listeners_1_1_item_generate_sphere_damage_field_listener">Sarachan.UniTiya.ItemSystem.Listeners.ItemGenerateSphereDamageFieldListener</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_listeners_1_1_item_health_listener">Sarachan.UniTiya.ItemSystem.Listeners.ItemHealthListener</link><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_weapon_actor_actions">Sarachan.UniTiya.IWeaponActorActions</link>
<para>WeaponController 提供给 Actor 的方法接口。 <link linkend="_namespace_sarachan_1_1_uni_tiya">UniTiya</link> 中默认提供两个攻击入口 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_weapon_actor_actions_1ad708dd0e4fa82c13614ad88ef94ca268">NormalAttack(SkillCmdType)</link> <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_weapon_actor_actions_1a2d8da9056d65f109f48579f5a669dae7">SpecialAttack(SkillCmdType)</link> </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_weapon_controller">Sarachan.UniTiya.IWeaponController</link>
<para>WeaponController 接口 </para>
<link linkend="_interface_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_i_weapon_tiya_animator_adapter">Sarachan.UniTiya.TiyaAnimator.IWeaponTiyaAnimatorAdapter</link>
<para><link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_tiya_animator">TiyaAnimator</link> 对于 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_weapon_controller">IWeaponController</link> 的接口 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_leaf_node">Sarachan.UniTiya.BehaviourTree.LeafNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_consumer_1_1_multi_consumer">Sarachan.UniTiya.Consumer.MultiConsumer</link>
<para>复合 Consumer。 要求所有 <link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_consumer">Consumer</link> 的 CanConsume 都为 true 才执行所有 <link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_consumer">Consumer</link> 的 Consume()。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_property_attributes_1_1_multi_enum_attribute">Sarachan.UniTiya.TiyaPropertyAttributes.MultiEnumAttribute</link>
<para>多选 Enum SerializedField </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_object_property_dictionary">Sarachan.UniTiya.Utility.GamePropertyConfiguration.ObjectPropertyDictionary</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_property_value_synchronizer">Sarachan.UniTiya.Utility.PropertyValueSynchronizer&lt; T &gt;</link>
<para>可配置的属性同步器。通过反射寻找指定 Unity.Object 中的某个属性，通过 Value 进行同步。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_random_obj_initializer">Sarachan.UniTiya.Utility.RandomObjInitializer</link>
<para>一个随机 Prefab 生成器，会根据权重通过对象池生成随机生成 Prefab。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_random_selector_node">Sarachan.UniTiya.BehaviourTree.RandomSelectorNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_random_sequence_node">Sarachan.UniTiya.BehaviourTree.RandomSequenceNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_repeater_node">Sarachan.UniTiya.BehaviourTree.RepeaterNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_repeat_until_fail_node">Sarachan.UniTiya.BehaviourTree.RepeatUntilFailNode</link><link linkend="_struct_sarachan_1_1_uni_tiya_1_1_tiya_view_1_1_tiya_actor_camera_view_configuration_1_1_rig_configuration">Sarachan.UniTiya.TiyaView.TiyaActorCameraViewConfiguration.RigConfiguration</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_runtime_property_configuration">Sarachan.UniTiya.Utility.RuntimePropertyConfiguration</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_consumer_1_1_scriptable_consumer_ref">Sarachan.UniTiya.Consumer.ScriptableConsumerRef</link>
<para><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_consumer_1_1_i_consumer">IConsumer</link> 的 ScriptableObject 基引用 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_selector_node">Sarachan.UniTiya.BehaviourTree.SelectorNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_sequence_node">Sarachan.UniTiya.BehaviourTree.SequenceNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_serializable_dictionary">Sarachan.UniTiya.Utility.SerializableDictionary&lt; TKey, TValue, TValueStorage &gt;</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_serializable_dictionary_base">Sarachan.UniTiya.Utility.SerializableDictionaryBase&lt; TKey, TValue, TValueStorage &gt;</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_property_attributes_1_1_set_property_attribute">Sarachan.UniTiya.TiyaPropertyAttributes.SetPropertyAttribute</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_skill_ref_behaviour_base">Sarachan.UniTiya.Skill.SkillRefBehaviourBase&lt; T &gt;</link>
<para>skill 的 Monobehaviour 形式，通过重写 <link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_skill">Skill</link> 实现。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_state_machine_1_1_state_base">Sarachan.UniTiya.StateMachine.StateBase&lt; T &gt;</link>
<para>状态基类，通过配置其事件来自定义状态 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_state_machine_1_1_state_transition">Sarachan.UniTiya.StateMachine.StateTransition</link>
<para>State 的转换 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_serializable_dictionary_1_1_storage">Sarachan.UniTiya.Utility.SerializableDictionary&lt; TKey, TValue, TValueStorage &gt;.Storage&lt; T &gt;</link><link linkend="_struct_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_string_property">Sarachan.UniTiya.Utility.GamePropertyConfiguration.StringProperty</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_string_property_dictionary">Sarachan.UniTiya.Utility.GamePropertyConfiguration.StringPropertyDictionary</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_succeeder_node">Sarachan.UniTiya.BehaviourTree.SucceederNode</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_timed_obj_recycler">Sarachan.UniTiya.Utility.TimedObjRecycler</link>
<para>定时对象回收器，会通过 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_game_object_pool">IGameObjectPool</link> 回收。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_view_1_1_tiya_actor_camera_view">Sarachan.UniTiya.TiyaView.TiyaActorCameraView</link>
<para>视角控制器，基于 Cinemachine 实现 </para>
<link linkend="_struct_sarachan_1_1_uni_tiya_1_1_tiya_view_1_1_tiya_actor_camera_view_configuration">Sarachan.UniTiya.TiyaView.TiyaActorCameraViewConfiguration</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_tiya_actor_controller">Sarachan.UniTiya.TiyaActor.TiyaActorController</link>
<para><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_controller">IActorController</link> 的实现 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_tiya_actor_equipment_manager">Sarachan.UniTiya.TiyaActor.TiyaActorEquipmentManager</link>
<para>适用于 Actor 的 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_equipment_manager">IEquipmentManager</link> 实现 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_actor_model_info">Sarachan.UniTiya.TiyaActor.ClothTool.TiyaActorModelInfo</link>
<para>Actor Model Prefab 的组件，用于向外界提供 Model 细节信息 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_tiya_actor_properties">Sarachan.UniTiya.TiyaActor.TiyaActorProperties</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_tiya_actor_state_machine">Sarachan.UniTiya.TiyaActor.TiyaActorStateMachine</link>
<para>适用于所有 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_controller">IActorController</link> 的状态机 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_view_1_1_tiya_actor_view">Sarachan.UniTiya.TiyaView.TiyaActorView</link>
<para><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_view">IActorView</link> 的实现 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_damage_interact_1_1_tiya_basic_actor_damageable">Sarachan.UniTiya.DamageInteract.TiyaBasicActorDamageable</link>
<para>适用于 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_actor_controller">IActorController</link> 的 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_damageable">IDamageable</link> 实现。 会根据 DamageSource 的 FinalDamageValue 减少 HP。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_tiya_basic_damage_source">Sarachan.UniTiya.Utility.TiyaBasicDamageSource</link>
<para>基础的可配置 DamageableSource </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_behaviour_tree_1_1_tiya_behaviour_tree">Sarachan.UniTiya.BehaviourTree.TiyaBehaviourTree</link>
<para>行为树实现 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_cloth_changer">Sarachan.UniTiya.TiyaActor.ClothTool.TiyaClothChanger</link>
<para>暖暖换衣服组件 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_cloth_info">Sarachan.UniTiya.TiyaActor.ClothTool.TiyaClothInfo</link>
<para>暖暖衣服 Prefab 的组件，用于向外界提供自身的各种信息 衣服绑定到暖暖身上是根据骨骼的名字绑定的 可以有多出的骨骼，请将多出的骨骼新建一个父节点，将父节点置于 <link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_actor_1_1_cloth_tool_1_1_tiya_cloth_info_1a8361b037871128bd1413aa2cf3c2b0b6">AddedBonesRoots</link> 数组中 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_damage_interact_1_1_tiya_damageable">Sarachan.UniTiya.DamageInteract.TiyaDamageable</link>
<para>一个可配置的 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_damageable">IDamageable</link> 实现，它可以通过配置事件、或继承重写 ReceiveDamageOverride(IDamageSource) 方法来配置 Damageable 行为。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_tiya_enable_agent">Sarachan.UniTiya.Utility.TiyaEnableAgent</link>
<para>一个实现了 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_enable">IEnable</link> 接口基础逻辑的代理类，通过配置其 event 来实现具体的功能。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_tiya_game_dynamic_numerical_property">Sarachan.UniTiya.Utility.TiyaGameDynamicNumericalProperty</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_tiya_game_dynamic_property_dictionary">Sarachan.UniTiya.Utility.GamePropertyConfiguration.TiyaGameDynamicPropertyDictionary</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_tiya_game_fixed_numerical_property">Sarachan.UniTiya.Utility.TiyaGameFixedNumericalProperty</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_tiya_game_fixed_property_dictionary">Sarachan.UniTiya.Utility.GamePropertyConfiguration.TiyaGameFixedPropertyDictionary</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_game_system">Sarachan.UniTiya.TiyaGameSystem</link>
<para><link linkend="_namespace_sarachan_1_1_uni_tiya">UniTiya</link> 游戏内容的全局对象获取入口。 在一个 Scene 中应该有且仅有一个该组件。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_interaction_1_1_tiya_interactive">Sarachan.UniTiya.Interaction.TiyaInteractive</link>
<para>可配置的交互类。可以通过继承或配置 Event 自定义。 交互的的条件是 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_interactive_object_handler">IInteractiveObjectHandler</link> 是否在 <link linkend="_class_sarachan_1_1_uni_tiya_1_1_interaction_1_1_tiya_interactive">TiyaInteractive</link> GameObject 的 Trigger 内。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_interaction_1_1_tiya_interactive_object_handler">Sarachan.UniTiya.Interaction.TiyaInteractiveObjectHandler</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_tiya_inventory">Sarachan.UniTiya.ItemSystem.TiyaInventory</link>
<para><link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_inventory">IInventory</link> 的实现 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_tiya_item">Sarachan.UniTiya.ItemSystem.TiyaItem</link>
<para>可配置的 Item。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_tiya_item_1_1_tiya_item_comparer">Sarachan.UniTiya.ItemSystem.TiyaItem.TiyaItemComparer</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_tiya_item_manager">Sarachan.UniTiya.ItemSystem.TiyaItemManager</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_tiya_projectile">Sarachan.UniTiya.Skill.TiyaProjectile</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_tiya_skill">Sarachan.UniTiya.Skill.TiyaSkill</link>
<para>可配置的 Skill，可以通过序列化配置，或者继承重写 OnInit， 在其中配置事件、consumer 等来实现自定义的 Skill。 初始状态下，Skill 是 Disable 的，需要先调用 Enable 才能使用。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_tiya_skill_behaviour">Sarachan.UniTiya.Skill.TiyaSkillBehaviour</link>
<para><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_tiya_skill">TiyaSkill</link> 的 Behaviour 引用。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_state_machine_1_1_tiya_state_machine">Sarachan.UniTiya.StateMachine.TiyaStateMachine</link>
<para>状态机基类，这个基类已经处理好了状态的转换与更新。 对这个状态机的配置需要通过继承，在 Awake 中配置状态机的所有状态。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_weapon_1_1_tiya_weapon_controller">Sarachan.UniTiya.TiyaWeapon.TiyaWeaponController</link>
<para>可配置的武器，通过组合 <link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_skill">Skill</link> 构造武器。 ExtraSkills 可以定义对应的 InputAction；InputAction 只有在 Owner.IsPlayer 的情况下才会生效。 所有该武器的 <link linkend="_namespace_sarachan_1_1_uni_tiya_1_1_skill">Skill</link> 和 InputAction 的 Enable 只会在改武器 Owner 已被设置的情况下发生，会在设置 Owner 时、组件 Enable 时调用； 而所有 Skil 和 InputAction 的 Disable 会在组件 Disable 时调用。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_item_system_1_1_tiya_weapon_item">Sarachan.UniTiya.ItemSystem.TiyaWeaponItem</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_weapon_1_1_tiya_weapon_tiya_animation_adapter">Sarachan.UniTiya.TiyaWeapon.TiyaWeaponTiyaAnimationAdapter</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_property_attributes_1_1_type_restriction_attribute">Sarachan.UniTiya.TiyaPropertyAttributes.TypeRestrictionAttribute</link>
<para>修饰任何派生自 UnityEngine.Object SerializedField。 该 Attribute 保证该字段一定能通过 TiyaTools.ConvertTo&lt;T&gt;(UnityEngine.Object) 方法 转换成指定类型的对象。 </para>
<link linkend="_struct_sarachan_1_1_uni_tiya_1_1_utility_1_1_game_property_configuration_1_1_unity_object_property">Sarachan.UniTiya.Utility.GamePropertyConfiguration.UnityObjectProperty</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_view_1_1_v_c_follow_ctrl">Sarachan.UniTiya.TiyaView.VCFollowCtrl</link>
<para>辅助 Behaviour，由 <link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_view_1_1_tiya_actor_camera_view">TiyaActorCameraView</link> 动态创建 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_view_1_1_v_c_input_provider">Sarachan.UniTiya.TiyaView.VCInputProvider</link>
<para>修改自 Cinemachine.CinemachineInputProvider 原来的脚本会自动 enable InputAction，这里把这个功能删除。 应该添加到 ViewController 的 FreeLookVC 以重载输入。 不手动添加也可以（TiyaViewController 会自动添加），但可能会有一个（没有实际影响的）Error Log。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_weapon_action_animation_bind">Sarachan.UniTiya.TiyaAnimator.WeaponActionAnimationBind</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_animated_melee_skill">Sarachan.UniTiya.Skill.WeaponAnimatedMeleeSkill</link>
<para>通过动画进行伤害判定的 Skill。 要求要进行判定的动画中设置了 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_skill_1_1_i_melee_weapon_animation_events">IMeleeWeaponAnimationEvents</link> 中对应的动画事件。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_animated_melee_skill_behaviour">Sarachan.UniTiya.Skill.WeaponAnimatedMeleeSkillBehaviour</link>
<para><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_animated_melee_skill">WeaponAnimatedMeleeSkill</link> 的 Behaviour 引用。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_weapon_attack_animation_bind">Sarachan.UniTiya.TiyaAnimator.WeaponAttackAnimationBind</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_damage_field_melee_skill">Sarachan.UniTiya.Skill.WeaponDamageFieldMeleeSkill</link>
<para>造成伤害区域的技能 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_damage_field_melee_skill_behaviour">Sarachan.UniTiya.Skill.WeaponDamageFieldMeleeSkillBehaviour</link>
<para><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_damage_field_melee_skill">WeaponDamageFieldMeleeSkill</link> 的 Behaviour 引用。 </para>
<link linkend="_struct_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_weapon_locomotion_animation_bind">Sarachan.UniTiya.TiyaAnimator.WeaponLocomotionAnimationBind</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_melee_skill_animation_events_handler">Sarachan.UniTiya.Skill.WeaponMeleeSkillAnimationEventsHandler</link><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_projectile_skill">Sarachan.UniTiya.Skill.WeaponProjectileSkill</link>
<para>SkillPerformer 需要是 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_i_weapon_controller">IWeaponController</link> 的 GameObject。 向 Weapon Owner 的 AimPose 方向投掷一个 <link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_tiya_projectile">TiyaProjectile</link> 的 Skill。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_shoot_skill">Sarachan.UniTiya.Skill.WeaponShootSkill</link>
<para>依赖于 <link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_projectile_skill">WeaponProjectileSkill</link> 的射击 WeaponSkill。 其 Perform 是根据当前射击模式进行射击，并且提供额外 Action 来切换模式。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_shoot_skill_behaviour">Sarachan.UniTiya.Skill.WeaponShootSkillBehaviour</link>
<para><link linkend="_class_sarachan_1_1_uni_tiya_1_1_skill_1_1_weapon_shoot_skill">WeaponShootSkill</link> 的 Behaviour 引用。 </para>
<link linkend="_class_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_weapon_tiya_animator_adapter_base">Sarachan.UniTiya.TiyaAnimator.WeaponTiyaAnimatorAdapterBase</link>
<para>实现了 <link linkend="_interface_sarachan_1_1_uni_tiya_1_1_tiya_animator_1_1_i_weapon_tiya_animator_adapter">IWeaponTiyaAnimatorAdapter</link> 的基 Behaviour，他已经处理了权重的配置 </para>
</section>
